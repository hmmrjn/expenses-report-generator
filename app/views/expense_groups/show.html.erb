<div class="container">

<p id="notice"><%= notice %></p>

<h1><%= @expense_group.name %></h1>

<div class="expenses-form">
<%= form_with(model: @expense, local: true) do |form| %>
  <% if @expense.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@expense.errors.count, "error") %> prohibited this expense from being saved:</h2>

      <ul>
      <% @expense.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field month-field">
    <%= form.label 'month' %>
    <%= form.date_select :date, default: @last_date, discard_day: true %>
  </div>

  <div class="flex-container">

    <div class="field tooltip-trigger">
      <%= form.label :day %><br>
      <%= form.number_field :day, id: 'day_field', readonly: true, value: @last_date.day %>
      <div class="tooltip">
        <i class="fas fa-lightbulb"></i> Use the
        <i class="far fa-caret-square-up"></i>
        <i class="far fa-caret-square-down"></i> keys (even when outside the field)
      </div>
    </div>

    <div class="field">
      <%= form.label :amount %><br>
      <% if @unregistered_sub_category %>
      <%= form.text_field :amount, id: 'first', tabIndex: '1', autocomplete: 'off' %>
      <% else %>
      <%= form.text_field :amount, id: 'first', autofocus: true, tabIndex: '1', autocomplete: 'off' %>
      <% end %>
    </div>

    <div class="field tooltip-trigger">
      <i class="fas fa-exchange-alt"></i><br>Tab
      <div class="tooltip">
        <i class="fas fa-lightbulb"></i> Use the Tab key to switch between the 2 fields
      </div>
    </div>

    <div class="field">
      <%= form.label :sub_category_name %><br>
      <%= form.text_field :sub_category_name, tabIndex: '2', value: @sub_category_name, list: :sub_categories, autocomplete: 'off' %>
    </div>

    <datalist id="sub_categories">
      <% @sub_categories.each do |sub_category| %>
      <option value="<%= sub_category.name %>">
      <% end %>
    </datalist>

    <% if @unregistered_sub_category %>
    <div class="field">
      <%= form.label :category_name %><br>
      <%= form.text_field :category_name, autofocus: true, tabIndex: '3', list: :categories, autocomplete: 'off' %>
    </div>

    <datalist id="categories">
      <% @categories.each do |category| %>
      <option value="<%= category.name.upcase %>">
      <% end %>
    </datalist>
    <% end %>

    <%= form.hidden_field :expense_group_id, value: @expense_group.id %>

    <div class="actions tooltip-trigger">
      <%= form.submit 'Enter', class: 'btn btn-primary' %>
      <div class="tooltip">
        <i class="fas fa-lightbulb"></i> Enter key also works
      </div>
    </div>
    <input tabIndex=4 onfocus="document.getElementById('first').focus()"
     style="position: relative; left: -100000px">

  </div>
<% end %>
</div>
<p>
  <%= link_to 'Download', '#', class: 'btn btn-secondary', 'data-toggle' => 'collapse', 'data-target' => '#collapseDownload', 'aria-expanded' => 'false', 'aria-controls' => 'collapseDonwload'  %>
  <%= link_to 'Dictate', "#", class: 'btn btn-secondary', 'data-toggle' => 'collapse', 'data-target' => '#collapseDictate', 'aria-expanded' => 'false', 'aria-controls' => 'collapseDictate' %>
  <%= link_to 'Delete All', "/expense_groups/#{@expense_group.id}/expenses", class: 'btn btn-danger', method: :delete, data: { confirm: 'Are you sure?' } %>
</p>
<div class="collapse" id="collapseDownload">
  <div class="card">
    <div class="card-body">
      <h5>Download Expenses</h5>
      <%= link_to 'Excel', "/expense_groups/#{@expense_group.id}/download_excel_plain", class: 'btn btn-primary' %>
      <%= link_to 'CSV', "/expense_groups/#{@expense_group.id}/download_csv", class: 'btn btn-primary' %>
    </div>
  </div>
</div>
<div class="collapse" id="collapseDictate">
  <div class="card">
    <div class="card-body">
      <h5>Dictate Expenses</h5>
      <p id="msg"></p>
      <label for="voice-name">Voice:</label>
      <select name="voice-name" id="voice-name"></select>
      <br>
      <label for="rate">Speed:</label>
      <input type="range" min="0" max="2" step="0.25" name="rate" id="rate" value="1">
      <br>
      <div class="btn-group" role="group" aria-label="Basic example">
        <button id="speak-button" class="btn btn-primary">Speak</button>
        <button id="pause-button" class="btn btn-secondary">Pause</button>
        <button id="resume-button" class="btn btn-secondary">Resume</button>
        <button id="stop-button" class="btn btn-secondary">Stop</button>
      </div>
    </div>
  </div>
</div>


<table class="expenses-table">
  <thead>
    <tr>
      <th>Date</th>
      <th>Category</th>
      <th>Sub category</th>
      <th>Amount</th>
      <th colspan="2"></th>
    </tr>
  </thead>

  <tbody>
    <% @expenses.each do |expense| %>
      <tr>
        <td><%= expense.date %></td>
        <td><%= expense.sub_category.category.name.upcase %></td>
        <td><%= expense.sub_category.name.capitalize %></td>
        <td align="right"><%= expense.amount.to_s(:delimited) %></td>
        <td><%= link_to edit_expense_path(expense), title: 'Edit' do %><i class="fas fa-edit"></i><% end %></td>
        <td><%= link_to expense, title: 'Delete', method: :delete, data: { confirm: 'Are you sure?' } do %><i class="fas fa-trash"></i><% end %></td>
      </tr>
    <% end %>
  </tbody>
</table>

</div>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<script>
$(function(){
  document.onkeydown = e => {
      // don't change day when selecting sub_category form dropdown
      if ($('#expense_sub_category_name').is(':focus')) return;
      e = e || window.event;
      let temp = parseInt( $('#day_field').val() );
      if (e.keyCode == '38') { //UP KEY
        $('#day_field').val(temp + 1);
      } else if (e.keyCode == '40') { //DOWN KEY
        $('#day_field').val(temp - 1);
      }
      if ($('#day_field').val() <= 0) {
        $('#day_field').val(31);
      } else if ($('#day_field').val() >= 32) {
        $('#day_field').val(1);
      }
  }

/*
 * Dictation
 */

// Web Speech Synthesis API
let array = [];
$("table.expenses-table tbody tr").each(function() {
  let row = $(this).children().toArray().map( tr => tr.innerText )
  let date = moment(row[0]).format("MMMM Do"); //2018-1-2 to January 2nd
  let text = `${date}. price ${row[3]}, ${row[2]}`;   // [3]:ammount [2]:sub_category
  array.push(text);
});

// Check for browser support
if (!"speechSynthesis" in window) {
  $("#msg").html( "Sorry. Your browser <strong>does not support</strong> speech synthesis." );
}
// Fetch the list of voices and populate the voice options.
function loadVoices() {
  // Fetch the available voices in English US.
  let voices = speechSynthesis .getVoices() .filter(voice => voice.lang == "en-US");
  $("#voice-name").empty();
  voices.forEach(function(voice, i) {
    $option = $("<option>")
        .val(voice.name)
        .text(voice.name)
        .prop("selected", voice.name === "Google US English");
    $("#voice-name").append($option);
  });
}

// Execute loadVoices.
loadVoices();

// Chrome loads voices asynchronously.
window.speechSynthesis.onvoiceschanged = function(e) {
  loadVoices();
};

// Create a new utterance for the specified text and add it to the queue.
let i = 0;
function speak(text) {
var uttr = new SpeechSynthesisUtterance();
  uttr.text = text;
  uttr.rate = parseFloat($("#rate").val());

  // If a voice has been selected, find the voice and set the
  // utterance instance's voice attribute.
  if ($("#voice-name").val()) {
    uttr.voice = speechSynthesis
      .getVoices()
      .filter(voice => voice.name == $("#voice-name").val())[0];
  }

  speechSynthesis.speak(uttr);


  uttr.onend = function(e) {
    $("table.expenses-table tbody tr").eq(i).css('color', 'black');
    $("table.expenses-table tbody tr").eq(i+1).css('color', 'red');
    i++;
  };
}

// Set up an event listener for when the 'speak' button is clicked.
$("#speak-button").click(function() {
  array.forEach(function(val) {
    $("table.expenses-table tbody tr").eq(0).css('color', 'red');
    speak(val);
  });
});
$("#pause-button").click(function() {
  speechSynthesis.pause();
});
$("#resume-button").click(function() {
  speechSynthesis.resume();
});
$("#stop-button").click(function() {
  speechSynthesis.cancel();
});

})
</script>
